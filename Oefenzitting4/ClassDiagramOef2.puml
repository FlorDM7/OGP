@startuml

abstract StackOfCards{
    + int capacity
    + Stack<Cards> stackOfCards

    + Stack(int capacity)

    + void fromMoveTo(StackOfCards stackOfCards)
    + void add(Card card)
    + Card pop()
    + int getCapacity()
    + int getSize()
    - Card peek()
    + List printAllCards()
}

class GoalStack{
    ..Override..
    + Card peek()
}

class HelpStack{

}

class SourceStack{
    ..Override..
    + Card peek()
}

'Cards are immutable
class Card{
    + {static} value: int
    + {static} kind: String

    + canPutCardOn(Card card): boolean
}

'Inheritance
StackOfCards <|-- GoalStack
StackOfCards <|-- SourceStack
StackOfCards <|-- HelpStack

'Bidirectional relation
Card "1" - "*" StackOfCards
HelpStack <-->  GoalStack

'Unidirectional relation
SourceStack --> GoalStack : if 1 higher or 1 lower


@enduml